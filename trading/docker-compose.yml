version: '3.5'
volumes:
  postgres_data:

services:
  web:
    build: ../trading
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ../trading:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - redis
      - db
    networks:
      - mynetwork
  db:
    image: postgres:12.0-alpine
    #    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=postgres_docker
      - POSTGRES_PASSWORD=postgres_docker
      - POSTGRES_DB=postgres_docker_dev
    networks:
      - mynetwork
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - 2181:2181
    networks:
      mynetwork:
        ipv4_address: 10.1.0.112

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    expose:
      - 9093
    env_file:
      - ./.env.dev
    networks:
      mynetwork:
        ipv4_address: 10.1.0.111
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://10.1.0.111:9093,OUTSIDE://10.1.0.111:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_KAFKA_HOST}
      KAFKA_CREATE_TOPICS: "topic-email:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG4J_LOGGERS: "kafka.controller=TRACE,kafka.request.logger=TRACE"
  #    volumes:
  #      - ./data/kafka1/data:/var/lib/kafka/data


  celery:
    build: ../trading
    command: celery -A trading worker -B --loglevel=info
    volumes:
      - ../trading:/usr/src/app
    env_file:
      - ./.env.dev
    depends_on:
      - web
      - redis
    networks:
      - mynetwork
    environment:
      KAFKA_EXTERNAL_HOSTNAME: kafka

  redis:
    image: redis:6-alpine
    networks:
      - mynetwork

  dashboard:
    build: ../trading
    command: flower -A trading --port=5555 --broker=redis://redis:6379/0
    ports:
      - 172.17.0.1:5555:5555
    env_file:
      - ./.env.dev
    depends_on:
      - web
      - redis
      - celery
    networks:
      - mynetwork
    environment:
      KAFKA_LOG4J_LOGGERS: "kafka.controller=TRACE,kafka.request.logger=TRACE"
      DOCKER_KAFKA_HOST: kafka

networks:
  mynetwork:
    name: bridge_network_inno_automate
    driver: bridge
    enable_ipv6: false
    ipam:
      config:
        - subnet: 10.1.0.0/16
